//week 8
//53. Maximum Subarray
class Solution {
    public int maxSubArray(int[] nums) {
        if (nums.length == 1) {
            return nums[0];
        }
        
        int len = 1;
        int sum = nums[0];
        int maxSum = nums[0];

        for (int i = 1; i<nums.length; i++) {
            if (nums[i] >= sum + nums[i]) {
                sum = nums[i];
                len = 1;
            } else {
                sum = sum + nums[i];
                len++;
            }

            if (sum > maxSum) {
                maxSum = sum;
            }
        }
        return maxSum;
    }
}
//322. Coin Change
class Solution {
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount+1];
        for(int i=1; i<=amount; ++i){
            int min = 10001;
            for(int coin : coins){
                int j = i-coin;
                if(j >= 0){
                    min = Math.min(min, dp[i-coin] + 1);
                }
            }
            dp[i] = min;
        }
        return dp[amount] >= 10001 ? -1 : dp[amount]; 
    }
}
